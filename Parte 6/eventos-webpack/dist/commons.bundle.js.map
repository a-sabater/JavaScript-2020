{"version":3,"sources":["webpack:///./constants.js","webpack:///./evento.class.js","webpack:///./http.class.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAa;;AAEb;AACO,2C;;;;;;;;;;;;ACHP;AAAA;AAAA;AAAA;AAAmC;AACD;;AAE3B;AACP,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,gDAAI,KAAK,iDAAM;AACxC;AACA;;AAEA;AACA,yBAAyB,gDAAI,MAAM,iDAAM;AACzC;AACA;AACA;;AAEA;AACA,cAAc,gDAAI,QAAQ,iDAAM;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;;AAEA;AACA;AACA,oCAAoC,IAAI,GAAG,IAAI,GAAG,sBAAsB;AACxE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAa;;AAEN;AACP,+CAA+C;AAC/C,sCAAsC,uBAAuB;AAC7D;AACA;AACA,qCAAqC;AACrC,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,C","file":"commons.bundle.js","sourcesContent":["'use strict';\n\n// Constantes globales aquí\nexport const SERVER = \"http://arturober.com:5003\";","import {SERVER} from './constants';\nimport {Http} from './http.class';\n\nexport class Evento {\n    constructor({ id, name, description, image, price, date }) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n        this.image = image;\n        this.price = +price;\n        this.date = new Date(date);\n    }\n\n    static async getEventos() {\n        let resp = await Http.get(SERVER + '/eventos');\n        return resp.eventos.map(ev => new Evento(ev));\n    }\n\n    async post() {\n        let resp = await Http.post(SERVER + '/eventos', this);\n        this.image = resp.evento.image;\n        this.id = resp.evento.id;\n    }\n\n    async delete() {\n        await Http.delete(SERVER + '/eventos/' + this.id);\n    }\n\n    toHTML() {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"card\");\n\n        const img = document.createElement(\"img\");\n        img.classList.add(\"card-img-top\");\n        img.src = this.image;\n        card.appendChild(img);\n\n        const cardBody = document.createElement(\"div\");\n        cardBody.classList.add(\"card-body\");\n        card.appendChild(cardBody);\n\n        const cardTitle = document.createElement(\"h4\");\n        cardTitle.classList.add(\"card-title\");\n        cardTitle.textContent = this.name;\n        cardBody.appendChild(cardTitle);\n\n        const cardText = document.createElement(\"p\");\n        cardText.classList.add(\"card-text\");\n        cardText.innerText = this.description; // innertext añade <br> en los saltos de línea (textContent no)\n        cardBody.appendChild(cardText);\n\n        const divBorrar = document.createElement(\"div\");\n        const borrar = document.createElement(\"button\");\n        borrar.classList.add(\"btn\", \"btn-danger\");\n        borrar.textContent = \"Borrar\";\n        divBorrar.appendChild(borrar);\n        cardBody.appendChild(divBorrar);\n\n        borrar.addEventListener(\"click\", async e => {\n            await this.delete();\n            card.remove();\n        });\n\n        const cardFooter = document.createElement(\"div\");\n        cardFooter.classList.add(\"card-footer\");\n        card.appendChild(cardFooter);\n\n        const dateObj = this.date;\n        // String.padStart es un método núevo para añadir ceros (u otro caracter) delante de un string.\n        // Si no funciona en tu navegador (En Chrome y Firefox debería), quita el método padStart.\n        const dia = String(dateObj.getDate()).padStart(2, '0'); // Ejemplo: 2 -> 02\n        const mes = String(dateObj.getMonth() + 1).padStart(2, '0');\n\n        const footerText = document.createElement(\"small\");\n        footerText.classList.add(\"text-muted\");\n        footerText.textContent = `${dia}/${mes}/${dateObj.getFullYear()}`;\n        cardFooter.appendChild(footerText);\n\n        const priceText = document.createElement(\"span\");\n        priceText.classList.add(\"float-right\");\n        priceText.textContent = (+this.price).toFixed(2) + \"€\";\n        footerText.appendChild(priceText);\n\n        return card;\n    }\n}\n","\"use strict\";\n\nexport class Http {\n    static async ajax(method, url, headers = {}, body = null) {\n       const resp = await fetch(url, { method, headers, body});\n        if(!resp.ok) throw new Error(resp.statusText);\n        if(resp.status != 204) {\n            return await resp.json(); // promise\n        } else {\n            return null;\n        }\n   }\n\n   static get(url) {\n       return Http.ajax('GET', url);\n   }\n\n   static post(url, data) {\n        return Http.ajax('POST', url, {\n            'Content-Type': 'application/json'\n        }, JSON.stringify(data));\n   }\n\n   static put(url, data) {\n        return Http.ajax('PUT', url, {\n            'Content-Type': 'application/json'\n        }, JSON.stringify(data));\n   }\n\n   static delete(url) {\n       return Http.ajax('DELETE', url);\n   }\n}"],"sourceRoot":""}